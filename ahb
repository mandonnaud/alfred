addPeripheral=function(id)
	if not(peripheral.isPresent(id)) then
		error(id..' non connecte')
		shell.exit()
	end
	return {
		id=id,
		pp=peripheral.wrap(id)
	}
end
function formatChiff(c)
	local mill=math.floor(c/1000)
	if mill==0 then
		return tostring(math.floor(c))
	else
		local unit=math.floor(c-(mill*1000))
		if unit<10 then
			return mill.." 00"..unit
		elseif unit<100 then
			return mill.." 0"..unit
		else
			return mill.." "..unit
		end
	end
end
configFileFc=function(programName)
	return './config/'..programName.."Config"
end
-- config("NomDuProg",{
-- 	nomVariable={
--    typ="string", -- choix, side, coord, couleur, boolean, table
--    info="Information complementaire",
--    defaut=""  -- proposition
--    choix={"choix 1","choix 2"}
--  }
-- })
config=function(programName,pConfig)
    local configFile=configFileFc(programName)
	local config={}
	local ok=true
    if not(fs.isDir('config')) then
        fs.makeDir('config')
    end
	if not(fs.exists(configFile)) then
		ok=false
	else
		file=fs.open(configFile,'r')
		config=textutils.unserialize(file.readAll())
		file.close()
		for key,data in pairs(pConfig) do
			if config[key]==nil then
				ok=false
			end
		end
	end
	
    if not(ok) then
        term.clear()
        term.setCursorPos(1,1)
        print('Pas de fichier de config trouve')
        print('Creation de fichier de config ')
        sleep(0.5)
        
        for key,data in pairs(pConfig) do
			if config[key]==nil then
				term.setBackgroundColor(colors.white)
				term.setTextColor(colors.black)
				term.clear()
				term.setCursorPos(1,1)
				question="Reglez "..key
				if data.info~=nil then
					question=question..data.info
				end				
				print(question)
				if data.typ=="side" then
					data.choix={"front","back","left","right","top","bottom","autre"}
				end
				if data.typ=="coord" then
					data.choix={'EAST','WEST','SOUTH','NORTH','UP','DOWN'}
					data.typ="choix"
				end
				if data.typ=="couleur" then
					data.choix={
						[colors.white]="white",
						[colors.orange]="orange",	
						[colors.magenta]="magenta",
						[colors.lightBlue]="lightBlue",	
						[colors.yellow]="yellow",
						[colors.lime]="lime",
						[colors.pink]="pink",
						[colors.gray]="gray",
						[colors.lightGray]="lightGray",
						[colors.cyan]="cyan",
						[colors.purple]="purple",
						[colors.blue]="blue",
						[colors.brown]="brown",
						[colors.green]="green",
						[colors.red]="red",
						[colors.black]="black"
					}
				end
				if data.typ=="boolean" then
					data.choix={
						[true]="true",
						[false]="false"
					}
					data.typ="choix2"
				end
				
				if data.typ=="string" then
					if data.defaut~=nil then
						term.setCursorPos(1,3)
						term.write("Si vide defaut : "..data.defaut)
					end
					term.setCursorPos(1,2)
					local answer=read()
					if data.defaut~=nil and answer=='' then
						config[key]=data.defaut
					else
						config[key]=answer
					end
					
				elseif data.typ=="choix" or data.typ=="choix2" or data.typ=="couleur" or data.typ=="side" then
					j=1
					for ck,cv in pairs(data.choix) do
						if data.typ=="couleur" then
							term.setBackgroundColor(ck)
						end
						term.setCursorPos(1,j+1)
						term.write(cv)
						j=j+1
					end
					local bool=true
					while bool do
						ev,button,x,y=os.pullEvent("mouse_click")
						j=1
						for ck,cv in pairs(data.choix) do
							if y==j+1 then
								if data.typ=="choix" then
									config[key]=cv
								elseif data.typ=="side" then
									if cv=="autre" then
										term.setCursorPos(1,10)
										local answer=read()
										config[key]=answer
									else
										config[key]=cv
									end
								else
									config[key]=ck
								end
								bool=false
							end
							j=j+1
						end
					end					
				elseif potentialConfig[i].typ=="table" then
					config[potentialConfig[i].nom]={}
				end				
			end
        end
		term.setBackgroundColor(colors.black)
		term.setTextColor(colors.white)
		term.clear()
		term.setCursorPos(1,1)	
		file=fs.open(configFile,'w')
		file.write(textutils.serialize(config))
        file.close()
    end   
    return config
end
configTab=function(programName,var,action,key,value)
	local configFile=configFileFc(programName)
	if not(fs.exists(configFile)) then
		error('ahb.configTab doit etre utiliser apres ahb.config')
	else
		file=fs.open(configFile,'r')
		config=textutils.unserialize(file.readAll())
		file.close()
		if action=='add' then
			if key==false then
				table.insert(config[var],value)
			else
				config[var][key]=value
			end
		elseif action=='maj' then
			config[var][key]=value
		elseif action=='remove' then
			table.remove(var)
		end
		fs.delete(configFile)
		file=fs.open(configFile,'w')
		file.write(textutils.serialize(config))
        file.close()
	end
end